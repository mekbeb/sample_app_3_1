require 'spec_helper'

describe "Microposts" do

	before(:each) do
		@user = Factory(:user)
		visit signin_path
		fill_in :email,    :with => @user.email
		fill_in :password, :with => @user.password
		click_button
	end
	
	describe "creation" do
	
		describe "failure" do
			it "should not make a new micropost" do
				lambda do
					visit root_path
					fill_in :micropost_content, :with => ""
					click_button
					response.should render_template('pages/home')
					response.should have_selector("div#error_explanation")
				end.should_not change(Micropost, :count)
			end
		end
		
		describe "success" do
			it "should make a new micropost" do
				content = "Lorem ipsum dolor sit amet"
				lambda do
					visit root_path
					fill_in :micropost_content, :with => content
					click_button
					response.should have_selector("span.content", :content => content)
				end.should change(Micropost, :count).by(1)
			end
			
			it "should show the right number of the user's microposts" do 
				mp1 = Factory(:micropost, :user => @user, :content => "Foo bar") 
				mp2 = Factory(:micropost, :user => @user, :content => "Baz quux") 
				microposts = "Microposts " + @user.microposts.count.to_s
				get :show, :id => @user 
				response.should have_selector("td", :content => microposts ) 
			end 

			it "should show just one user's micropost" do 
				@wrong_user = Factory(:user, :email => "user@example.net")

				mp3 = Factory(:micropost, :user => @wrong_user, :content => "Foo bar") 
				mp_msg = "Micropost"
				if @wrong_user.microposts.count>1
					mp_msg.pluralize
				end
				content = mp_msg + " "  + @wrong_user.microposts.count.to_s
				get :show, :id => @wrong_user 
				response.should have_selector("td", :content => content ) 
			end 
			
			
		end
		
	end

end
